{"posts":[{"title":"devlog_azoth_23_9_11","text":"Azoth开发日志_2023_091. 简单部署到webgl想着要展示展示游戏开发进程，而Unity的跨平台能力如此强劲，于是乎尝试直接粗暴打包webgl，然后放到git上进行游玩。 1.1 切换webgl平台，直接打包，过程顺利 1.2 本地运行，感觉良好 1.3 git开新仓库，上传webgl包。设置pages。 1.4 访问页面https://www.biscuitsword.com/Azoth.github.io/ 寄。 1.5 主要问题是加载到90%时卡住，更换模板的话则直接黑屏，推测player setting有问题，或者是因为初始化的时候尝试调取本地资源。 1.6 （与Gpt）一番尝试，将player setting中的Compression format改为Disabled之后问题解决。皆大欢喜。 1.7 而对Application.persistentDataPath的读写居然能够在Webgl下正常运行令人惊讶。我 推测在webgl下，该目录的读写会写入浏览器的缓存中保存，因为清除缓存/更换浏览器/无痕浏览都会使得存档消失。此外对Resources.Load的调用也能够正常运作，说明Unity打包webgl时和standalone打包一样将resources资源打包，白操作一场（Gpt害人不浅）。 1.8 Demo地址 https://www.biscuitsword.com/Azoth.github.io/ 之后的开发过程中也会顺便更新Demo。 2. 遗留问题2.1 在WebGL上人物的服装不知道为什么消失了，而人物的肢体却能够正常加载。 虽然服装是通过Resources.Load的方式动态载入的，但是其他资源都能够正常加载，十分古怪，不过不影响体验，而且webgl不是最终目标平台，暂且放过。","link":"/2023/09/11/devlog-azoth-23-9-11/"}],"tags":[{"name":"devlog","slug":"devlog","link":"/tags/devlog/"}],"categories":[],"pages":[]}